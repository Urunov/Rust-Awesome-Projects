(function() {var implementors = {};
implementors["bytemuck"] = [{"text":"impl Display for PodCastError","synthetic":false,"types":[]}];
implementors["core_foundation"] = [{"text":"impl Display for CFError","synthetic":false,"types":[]},{"text":"impl Display for CFString","synthetic":false,"types":[]}];
implementors["crossbeam_channel"] = [{"text":"impl&lt;T&gt; Display for SendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Display for TrySendError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Display for SendTimeoutError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Display for RecvError","synthetic":false,"types":[]},{"text":"impl Display for TryRecvError","synthetic":false,"types":[]},{"text":"impl Display for RecvTimeoutError","synthetic":false,"types":[]},{"text":"impl Display for TrySelectError","synthetic":false,"types":[]},{"text":"impl Display for SelectTimeoutError","synthetic":false,"types":[]}];
implementors["crossbeam_utils"] = [{"text":"impl&lt;T:&nbsp;?Sized + Display, '_&gt; Display for ShardedLockReadGuard&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Display, '_&gt; Display for ShardedLockWriteGuard&lt;'_, T&gt;","synthetic":false,"types":[]}];
implementors["deflate"] = [{"text":"impl Display for MatchingType","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L, R&gt; Display for Either&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Display,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Display,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["gif"] = [{"text":"impl Display for DecodingFormatError","synthetic":false,"types":[]},{"text":"impl Display for DecodingError","synthetic":false,"types":[]},{"text":"impl Display for EncodingError","synthetic":false,"types":[]}];
implementors["glutin"] = [{"text":"impl Display for CreationError","synthetic":false,"types":[]},{"text":"impl Display for ContextError","synthetic":false,"types":[]}];
implementors["graphics_api_version"] = [{"text":"impl Display for UnsupportedGraphicsApiError","synthetic":false,"types":[]}];
implementors["image"] = [{"text":"impl Display for ImageError","synthetic":false,"types":[]},{"text":"impl Display for UnsupportedError","synthetic":false,"types":[]},{"text":"impl Display for ParameterError","synthetic":false,"types":[]},{"text":"impl Display for EncodingError","synthetic":false,"types":[]},{"text":"impl Display for DecodingError","synthetic":false,"types":[]},{"text":"impl Display for LimitError","synthetic":false,"types":[]},{"text":"impl Display for ImageFormatHint","synthetic":false,"types":[]},{"text":"impl Display for Error","synthetic":false,"types":[]}];
implementors["jpeg_decoder"] = [{"text":"impl Display for Error","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Display for Level","synthetic":false,"types":[]},{"text":"impl Display for LevelFilter","synthetic":false,"types":[]},{"text":"impl Display for SetLoggerError","synthetic":false,"types":[]},{"text":"impl Display for ParseLevelError","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T:&nbsp;Display + Clone + Integer&gt; Display for Ratio&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Display for ParseRatioError","synthetic":false,"types":[]}];
implementors["num_traits"] = [{"text":"impl Display for ParseFloatError","synthetic":false,"types":[]}];
implementors["objc"] = [{"text":"impl Display for MessageError","synthetic":false,"types":[]}];
implementors["opengl_graphics"] = [{"text":"impl Display for Error","synthetic":false,"types":[]}];
implementors["png"] = [{"text":"impl Display for DisposeOp","synthetic":false,"types":[]},{"text":"impl Display for BlendOp","synthetic":false,"types":[]},{"text":"impl Display for DecodingError","synthetic":false,"types":[]},{"text":"impl Display for EncodingError","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Display for TokenStream","synthetic":false,"types":[]},{"text":"impl Display for LexError","synthetic":false,"types":[]},{"text":"impl Display for TokenTree","synthetic":false,"types":[]},{"text":"impl Display for Group","synthetic":false,"types":[]},{"text":"impl Display for Punct","synthetic":false,"types":[]},{"text":"impl Display for Ident","synthetic":false,"types":[]},{"text":"impl Display for Literal","synthetic":false,"types":[]}];
implementors["rayon_core"] = [{"text":"impl Display for ThreadPoolBuildError","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Display for Error","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Display for Unexpected&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Display for dyn Expected + 'a","synthetic":false,"types":[]}];
implementors["shader_version"] = [{"text":"impl Display for ParseOpenGLError","synthetic":false,"types":[]},{"text":"impl Display for ParseGLSLError","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Display for Lifetime","synthetic":false,"types":[]},{"text":"impl Display for LitInt","synthetic":false,"types":[]},{"text":"impl Display for LitFloat","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Display for ParseBuffer&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Display for Error","synthetic":false,"types":[]}];
implementors["tiff"] = [{"text":"impl Display for TiffFormatError","synthetic":false,"types":[]},{"text":"impl Display for TiffUnsupportedError","synthetic":false,"types":[]},{"text":"impl Display for TiffError","synthetic":false,"types":[]}];
implementors["ttf_parser"] = [{"text":"impl Display for Tag","synthetic":false,"types":[]}];
implementors["weezl"] = [{"text":"impl Display for LzwError","synthetic":false,"types":[]}];
implementors["winit"] = [{"text":"impl Display for BadIcon","synthetic":false,"types":[]},{"text":"impl Display for EventsLoopClosed","synthetic":false,"types":[]},{"text":"impl Display for CreationError","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
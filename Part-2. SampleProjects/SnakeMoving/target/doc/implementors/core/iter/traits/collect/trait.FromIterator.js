(function() {var implementors = {};
implementors["cocoa"] = [{"text":"impl FromIterator&lt;NSApplicationPresentationOptions&gt; for NSApplicationPresentationOptions","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSWindowStyleMask&gt; for NSWindowStyleMask","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSWindowOrderingMode&gt; for NSWindowOrderingMode","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSAlignmentOptions&gt; for NSAlignmentOptions","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSWindowCollectionBehavior&gt; for NSWindowCollectionBehavior","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSWindowOcclusionState&gt; for NSWindowOcclusionState","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSEventSwipeTrackingOptions&gt; for NSEventSwipeTrackingOptions","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSEventPhase&gt; for NSEventPhase","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSTouchPhase&gt; for NSTouchPhase","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSEventMask&gt; for NSEventMask","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSEventModifierFlags&gt; for NSEventModifierFlags","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSEnumerationOptions&gt; for NSEnumerationOptions","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSDataReadingOptions&gt; for NSDataReadingOptions","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSDataBase64EncodingOptions&gt; for NSDataBase64EncodingOptions","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSDataBase64DecodingOptions&gt; for NSDataBase64DecodingOptions","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSDataWritingOptions&gt; for NSDataWritingOptions","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;NSDataSearchOptions&gt; for NSDataSearchOptions","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;EdgeAntialiasingMask&gt; for EdgeAntialiasingMask","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;CornerMask&gt; for CornerMask","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;AutoresizingMask&gt; for AutoresizingMask","synthetic":false,"types":[]}];
implementors["core_graphics"] = [{"text":"impl FromIterator&lt;CGEventFlags&gt; for CGEventFlags","synthetic":false,"types":[]}];
implementors["crossbeam_deque"] = [{"text":"impl&lt;T&gt; FromIterator&lt;Steal&lt;T&gt;&gt; for Steal&lt;T&gt;","synthetic":false,"types":[]}];
implementors["input"] = [{"text":"impl FromIterator&lt;ModifierKey&gt; for ModifierKey","synthetic":false,"types":[]}];
implementors["png"] = [{"text":"impl FromIterator&lt;Transformations&gt; for Transformations","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl FromIterator&lt;TokenTree&gt; for TokenStream","synthetic":false,"types":[]},{"text":"impl FromIterator&lt;TokenStream&gt; for TokenStream","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl&lt;T, P&gt; FromIterator&lt;T&gt; for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; FromIterator&lt;Pair&lt;T, P&gt;&gt; for Punctuated&lt;T, P&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()